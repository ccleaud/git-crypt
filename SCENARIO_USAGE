This scenario applies to Windows but has very few difference from a Linux usage.


================================================================================
=== APPLYING ENCRYPTION TO A NON-ENCRYPTED REPOSITORY ===
================================================================================

--- CREATING A WORKING COPY FOR A GIT REPO ---
cd /d "c:\the path\to your\target folder"
git init
git remote add origin https://user:password@site.com/path/to/repo.git


--- GENERATING KEYFILE ---
git-crypt keygen "c:\path to\keyfile.dat"


--- CONFIGURING THE WORKING COPY TO USING GIT-CRYPT AS A FILTER ---
git-crypt init "c:\path to\keyfile.dat"


--- DEFINING WHICH FILES TO ENCRYPT ---
>> The git-crypt init command ends telling you to create / update the .gitattributes file.
>> After editing the file:
git add .gitattributes
git commit -a -m "Initial crypto file filter"


--- USING YOUR REPO ---
git add ...
git rm ...
git commit -a -m "xxx"
git diff ...
git fetch ...
git pull ...
git merge ...



================================================================================
=== CLONING AND USING AN ENCRYPTED REPOSITORY ===
================================================================================

--- GETTING THE KEYFILE ---
Get it or you won't be able to use the repo


--- CLONING THE REPO ---
cd /d "c:\the path\to your\parent folder"
git clone https://user:password@site.com/path/to/repo.git your_local_working_copy_dir_name


--- DECRYPTING THE WORKING COPY ---
git-crypt init "c:\path to\keyfile.dat"


--- USING YOUR REPO ---
git add ...
git rm ...
git commit -a -m "xxx"
git diff ...
git fetch ...
git pull ...
git merge ...
